//  Application Delegate//  Generated by Illumination Software Creator#import "dualPrintAppDelegate.h"@implementation dualPrintAppDelegate@synthesize window;//@synthesize numberPadDoneImageNormal;//@synthesize numberPadDoneImageHighlighted;//@synthesize numberPadDoneButton;int iscVcapApple = 5000;int iscVn8 = 8;int iscVn6 = 6;int iscVn4 = 4;int iscVn0 = 0;int iscVn2m = 2;int iscVnm1 = 1;NSMutableString *iscVparImpTest = @"";int iscVcapAndro = 78;NSMutableString *iscVlink_pHelp_Loc = @"redirect.html";int iscVwAbout = 0;NSMutableString *iscVlink_license = @"http://www.opensource.org/licenses/MIT";NSMutableString *iscVlink_web = @"http://www.dualPrint.org/";NSMutableString *iscVNotifyOSD_Par = @"notify-send \'dualPrint: Even Copy\' \'The seccond print set has been copied to the clipboard. You may paste it in the print dialog.\'";NSMutableString *iscVNotifyOSD_Imp = @"notify-send \'dualPrint: Odd Copy\' \'The first print set has been copied to the clipboard. You may paste it in the print dialog.\'";int iscVn2 = 2;NSMutableString *iscVcoma = @",";NSMutableString *iscVguion = @"-";int iscVn = 12;int iscVsl = 4;int iscVstart = 1;int iscVcount = 0;NSMutableString *iscVnText = @"12";NSMutableString *iscVslText = @"4";NSMutableString *iscVstartText = @"1";NSMutableString *iscVwPar = @"";NSMutableString *iscVwrite = @"write";int iscVn1 = 1;NSMutableString *iscVcountText = @"countText";int iscVqTest = 0;int iscVqDifference = 0;NSMutableString *iscVwImpar = @"";NSMutableString *iscVlink = @"";NSMutableString *iscVnullText = @"";NSMutableString *iscVlink_pHelp_M = @"http://www.dualprint.org/";NSMutableString *iscVtotal = @"Total: ";NSMutableString *iscVtotalPages = @"";//EndOfGlobalVariables- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {[self iscWindow173];//iscApp1Launchedreturn YES;}- (void) iscTargetIs3 {    [self iscHide_Keyboard2:YES];//iscTargetIs3iOS}- (void) iscFloat_to_integer5 {//Casting to integerint integerNum = (int)(iscVqDifference);iscVqDifference = integerNum;//iscFloat_to_integer5Done}- (void) iscPortalDestination6 {[self iscSubtract19];[self iscDivide17];[self iscDivide16];[self iscAdd18];[self iscTargetIs3];[self iscConvertNumberToText14];//iscPortalDestination6Arrived}- (void) iscConvertNumberToText7 {iscVwrite = [NSMutableString stringWithFormat:@"%d",iscVcount];//iscConvertNumberToText7Done}- (void) iscSetCanvasPicture8 {[iscWindow173header0  setImage:[UIImage imageNamed:@"header.jpg"] forState:UIControlStateNormal];[iscWindow173header0  setImage:[UIImage imageNamed:@"header.jpg"] forState:UIControlStateHighlighted];//iscSetCanvasPicture8Done}- (void) iscSetCanvasPicture9 {[iscWindow173CP0  setImage:[UIImage imageNamed:@"copy.jpg"] forState:UIControlStateNormal];//iscSetCanvasPicture9Done}- (void) iscSetCanvasPicture10 {[iscWindow173CI0  setImage:[UIImage imageNamed:@"copy.jpg"] forState:UIControlStateNormal];//iscSetCanvasPicture10Done}- (void)iscWindow11returnClicked {[self iscIfThen46];//iscWindow11returnClicked}- (void)iscWindow11 {window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] applicationFrame]];window.backgroundColor = [UIColor whiteColor];iscWindow11WebBrowser0 = [[UIWebView alloc] init];iscWindow11WebBrowser0.frame = CGRectMake(0, 0, 320, 420);iscWindow11WebBrowser0.delegate = self;[window addSubview:iscWindow11WebBrowser0];iscWindow11return0 = [UIButton buttonWithType:UIButtonTypeRoundedRect];iscWindow11return0.frame = CGRectMake(0, 420, 320, 40);[iscWindow11return0 setTitle:@"Return to dualPrint" forState:UIControlStateNormal];[iscWindow11return0 addTarget:self action:@selector(iscWindow11returnClicked) forControlEvents:UIControlEventTouchUpInside];[window addSubview:iscWindow11return0];[window makeKeyAndVisible];//iscWindow11Done[self iscSetWebBrowser47];//iscWindow11Opened}- (void) iscSetText12 {iscVlink = iscVlink_pHelp_M;[self iscTargetIs160];//iscSetText12Done}- (void) iscSetText13 {iscVlink = iscVlink_pHelp_Loc;[self iscTargetIs160];//iscSetText13Done}- (void) iscConvertNumberToText14 {iscVtotalPages = [NSMutableString stringWithFormat:@"%d",iscVqDifference];[self iscCombineText15];//iscConvertNumberToText14Done}- (void) iscCombineText15 {iscVtotalPages = [iscVtotal stringByAppendingString:iscVtotalPages];[self iscSetButton152];//iscCombineText15Done}- (void) iscDivide16 {iscVqDifference = iscVqDifference / iscVn2;//iscDivide16Done}- (void) iscDivide17 {iscVqDifference = iscVqDifference / iscVsl;//iscDivide17Done}- (void) iscAdd18 {iscVqDifference = iscVqDifference + iscVn1;//iscAdd18Done}- (void) iscSubtract19 {iscVqDifference = iscVn - iscVstart;//iscSubtract19Done}- (void) iscClipboard_Copy21 {UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];pasteboard.string = iscVwPar;//iscClipboard_Copy21Done}- (void) iscRunShellScript23 {//iscRunShellScript23Done}- (void) iscIf_Linux25 {//iscIf_Linux25Else}- (void) iscPortalDeparture26 {[self iscPortalDestination144];//iscPortalDeparture26Done}- (void) iscIfThen27 {if (iscVqTest > iscVn){[self iscPortalDeparture26];//iscIfThen27True}else{[self iscPortalDeparture34];//iscIfThen27False}//iscIfThen27Done}- (void) iscIfThen31 {if (iscVqTest == iscVn){[self iscPortalDeparture32];[self iscPortalDeparture150];//iscIfThen31True}else{[self iscDivide33];[self iscIfThen36];[self iscPortalDeparture150];//iscIfThen31False}//iscIfThen31Done}- (void) iscPortalDeparture32 {[self iscPortalDestination98];//iscPortalDeparture32Done}- (void) iscDivide33 {iscVqDifference = iscVn / iscVn2;//iscDivide33Done}- (void) iscPortalDeparture34 {[self iscPortalDestination128];//iscPortalDeparture34Done}- (void) iscIfThen36 {if (iscVqTest < iscVqDifference){[self iscPortalDeparture34];//iscIfThen36True}else{[self iscIfThen63];//iscIfThen36False}//iscIfThen36Done}- (void) iscDoWhile38 {while (iscVcount < iscVn){[self iscCombineText132];[self iscConvertNumberToText56];[self iscCombineText125];[self iscAdd136];[self iscAdd137];//iscDoWhile38Loop}[self iscSetText49];[self iscConvertTextToNumber146];[self iscPortalDeparture150];//iscDoWhile38Finished}- (void) iscDoWhile39 {while (iscVcount < iscVn){[self iscCombineText132];[self iscConvertNumberToText56];[self iscCombineText125];[self iscAdd136];[self iscAdd137];//iscDoWhile39Loop}[self iscSetText54];[self iscAdd136];[self iscAdd137];[self iscDoWhile38];//iscDoWhile39Finished}- (void) iscMessageBox40 {iscMessageBox40var = [[UIAlertView alloc] initWithTitle:@"" message:@"The starting page should be lower than the total of pages to print." delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];[iscMessageBox40var show];[iscMessageBox40var release];}- (void) iscRunShellScript41 {//iscRunShellScript41Done}- (void) iscIf_Linux43 {//iscIf_Linux43Else}- (void) iscAdd44 {iscVqTest = iscVqTest + iscVsl;//iscAdd44Done}- (void) iscAdd45 {iscVcount = iscVcount + iscVqDifference;//iscAdd45Done}- (void) iscIfThen46 {if (iscVwAbout == iscVn1){[self iscWindow178];//iscIfThen46True}else{[self iscWindow173];//iscIfThen46False}//iscIfThen46Done}- (void) iscSetWebBrowser47 {[iscWindow11WebBrowser0 loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:iscVlink]]];//iscSetWebBrowser47Done}- (void) iscMessageBox48 {iscMessageBox48var = [[UIAlertView alloc] initWithTitle:@"" message:@"You should print at least 1 page per side." delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];[iscMessageBox48var show];[iscMessageBox48var release];}- (void) iscSetText49 {iscVwPar = iscVwrite;[self iscSetTextBox78];[self iscSetTextBox102];[self iscTargetIs157];//iscSetText49Done}- (void) iscTargetIs50 {[self iscSetText12];//iscTargetIs50iOS}- (void) iscSubtract51 {iscVqTest = iscVqTest - iscVn1;//iscSubtract51Done}- (void) iscSubtract52 {iscVqDifference = iscVqTest - iscVn;[self iscSubtract53];//iscSubtract52Done}- (void) iscSubtract53 {iscVqDifference = iscVsl - iscVqDifference;[self iscAdd45];//iscSubtract53Done}- (void) iscSetText54 {iscVwImpar = iscVwrite;[self iscAdd123];//iscSetText54Done}- (void) iscAdd55 {iscVqTest = iscVqTest + iscVn1;//iscAdd55Done}- (void) iscConvertNumberToText56 {iscVcountText = [NSMutableString stringWithFormat:@"%d",iscVcount];//iscConvertNumberToText56Done}- (void) iscIfThen57 {if (iscVsl == iscVn1){[self iscPortalDeparture59];[self iscSetCanvasPicture8];//iscIfThen57True}else{[self iscTargetIs161];//iscIfThen57False}//iscIfThen57Done}- (void) iscPortalDestination58 {[self iscAdd129];[self iscSubtract51];[self iscIfThen127];//iscPortalDestination58Arrived}- (void) iscPortalDeparture59 {[self iscPortalDestination139];//iscPortalDeparture59Done}- (void) iscMessageBox60 {iscMessageBox60var = [[UIAlertView alloc] initWithTitle:@"" message:@"The sum of the starting page and the pages per side should be less than or equal to the total of pages to print." delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];[iscMessageBox60var show];[iscMessageBox60var release];}- (void) iscIfThen62 {if (iscVqTest > iscVn){[self iscMessageBox60];//iscIfThen62True}else{[self iscIfThen57];//iscIfThen62False}//iscIfThen62Done}- (void) iscIfThen63 {if (iscVqTest == iscVqDifference){[self iscPortalDeparture34];//iscIfThen63True}else{[self iscAdd65];[self iscAdd44];[self iscIfThen27];//iscIfThen63False}//iscIfThen63Done}- (void) iscMessageBox64 {iscMessageBox64var = [[UIAlertView alloc] initWithTitle:@"" message:@"The number of pages per side should be less than the total of pages to print." delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];[iscMessageBox64var show];[iscMessageBox64var release];}- (void) iscAdd65 {iscVqTest = iscVstart + iscVsl;//iscAdd65Done}- (void) iscCombineText67 {iscVwrite = [iscVwrite stringByAppendingString:iscVguion];//iscCombineText67Done}- (void) iscAppQuit69 {//iscAppQuit69Done}- (void) iscPortalDeparture70 {[self iscPortalDestination72];//iscPortalDeparture70Done}- (void) iscPortalDeparture71 {[self iscPortalDestination58];//iscPortalDeparture71Done}- (void) iscPortalDestination72 {[self iscAdd136];[self iscAdd137];[self iscConvertNumberToText56];[self iscCombineText125];[self iscPortalDeparture71];//iscPortalDestination72Arrived}- (void) iscSetTextBox78 {iscWindow173wImpar0.text = iscVwImpar;//iscSetTextBox78Done}- (void) iscIfThen79 {if (iscVqTest == iscVn){[self iscCombineText67];[self iscAdd136];[self iscSubtract124];[self iscConvertNumberToText56];[self iscCombineText125];//iscIfThen79True}else{[self iscCombineText67];[self iscSubtract52];[self iscSubtract124];[self iscConvertNumberToText56];[self iscConvertNumberToText56];[self iscCombineText125];//iscIfThen79False}//iscIfThen79Done}- (void) iscIfThen80 {if (iscVqTest == iscVn){[self iscCombineText132];[self iscAdd136];[self iscAdd137];[self iscConvertNumberToText56];[self iscCombineText125];//iscIfThen80True}else{//iscIfThen80False}//iscIfThen80Done}- (void) iscMessageBox96 {iscMessageBox96var = [[UIAlertView alloc] initWithTitle:@"" message:@"The document must have 2 pages at least." delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];[iscMessageBox96var show];[iscMessageBox96var release];}- (void) iscMessageBox97 {iscMessageBox97var = [[UIAlertView alloc] initWithTitle:@"" message:@"Your print should start from page 1 forward." delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];[iscMessageBox97var show];[iscMessageBox97var release];}- (void) iscPortalDestination98 {[self iscSetNumber133];[self iscCombineText67];[self iscPortalDeparture140];[self iscSetText54];[self iscSetText49];//iscPortalDestination98Arrived}- (void) iscIfThen99 {if (iscVstart < iscVn){[self iscIfThen103];//iscIfThen99True}else{[self iscMessageBox40];//iscIfThen99False}//iscIfThen99Done}- (void) iscIfThen100 {if (iscVstart < iscVn1){[self iscMessageBox97];//iscIfThen100True}else{[self iscIfThen115];//iscIfThen100False}//iscIfThen100Done}- (void) iscSetTextBox102 {iscWindow173wPar0.text = iscVwPar;//iscSetTextBox102Done}- (void) iscIfThen103 {if (iscVsl < iscVn){[self iscAdd65];[self iscIfThen62];//iscIfThen103True}else{[self iscMessageBox64];//iscIfThen103False}//iscIfThen103Done}- (void) iscPortalDestination104 {[self iscPortalDeparture140];[self iscSetText54];[self iscCombineText67];[self iscPortalDeparture140];[self iscSetText49];//iscPortalDestination104Arrived}- (void) iscPortalDeparture105 {[self iscPortalDestination104];//iscPortalDeparture105Done}- (void) iscIfThen114 {if (iscVn < iscVn2){[self iscMessageBox96];//iscIfThen114True}else{[self iscIfThen100];//iscIfThen114False}//iscIfThen114Done}- (void) iscIfThen115 {if (iscVsl < iscVn1){[self iscMessageBox48];//iscIfThen115True}else{[self iscIfThen99];//iscIfThen115False}//iscIfThen115Done}- (void) iscGetTextBox116 {iscVstartText = iscWindow173start0.text;[self iscGetTextBox117];//iscGetTextBox116Done}- (void) iscGetTextBox117 {iscVslText = iscWindow173sl0.text;[self iscGetTextBox118];//iscGetTextBox117Done}- (void) iscGetTextBox118 {iscVnText = iscWindow173n0.text;[self iscIfThen175];//iscGetTextBox118Done}- (void) iscOpen_in_Web_Browser120 {//iscOpen_in_Web_Browser120Done}- (void) iscAdd123 {iscVcount = iscVstart + iscVsl;[self iscConvertNumberToText7];//iscAdd123Done}- (void) iscSubtract124 {iscVcount = iscVcount - iscVn1;//iscSubtract124Done}- (void) iscCombineText125 {iscVwrite = [iscVwrite stringByAppendingString:iscVcountText];//iscCombineText125Done}- (void) iscIfThen126 {if (iscVqTest < iscVn){[self iscCombineText132];[self iscPortalDeparture70];//iscIfThen126True}else{[self iscIfThen80];//iscIfThen126False}//iscIfThen126Done}- (void) iscIfThen127 {if (iscVqTest < iscVn){[self iscCombineText67];[self iscPortalDeparture140];//iscIfThen127True}else{[self iscIfThen79];//iscIfThen127False}//iscIfThen127Done}- (void) iscPortalDestination128 {[self iscSetNumber133];[self iscCombineText67];[self iscPortalDeparture105];//iscPortalDestination128Arrived}- (void) iscAdd129 {iscVqTest = iscVcount + iscVsl;//iscAdd129Done}- (void) iscIfThen130 {if (iscVwAbout == iscVn1){//iscIfThen130True}else{[self iscSetNumber162];//iscIfThen130False}//iscIfThen130Done}- (void) iscTargetIs131 {[self iscSetNumber167];[self iscWindow173];//iscTargetIs131iOS}- (void) iscCombineText132 {iscVwrite = [iscVwrite stringByAppendingString:iscVcoma];//iscCombineText132Done}- (void) iscSetNumber133 {iscVqTest = 0;[self iscSetNumber134];//iscSetNumber133Done}- (void) iscSetNumber134 {iscVqDifference = 0;[self iscSetNumber135];//iscSetNumber134Done}- (void) iscSetNumber135 {iscVcount = iscVstart;[self iscConvertNumberToText7];//iscSetNumber135Done}- (void) iscAdd136 {iscVcount = iscVcount + iscVsl;//iscAdd136Done}- (void) iscAdd137 {iscVcount = iscVcount + iscVn1;//iscAdd137Done}- (void) iscAdd138 {iscVn = iscVn + iscVn1;//iscAdd138Done}- (void) iscPortalDestination139 {[self iscSetNumber133];[self iscAdd136];[self iscAdd137];[self iscAdd138];[self iscDoWhile39];//iscPortalDestination139Arrived}- (void) iscPortalDeparture140 {[self iscPortalDestination141];//iscPortalDeparture140Done}- (void) iscPortalDestination141 {[self iscAdd136];[self iscSubtract124];[self iscConvertNumberToText56];[self iscCombineText125];[self iscPortalDeparture142];//iscPortalDestination141Arrived}- (void) iscPortalDeparture142 {[self iscPortalDestination143];//iscPortalDeparture142Done}- (void) iscPortalDestination143 {[self iscAdd129];[self iscAdd55];[self iscIfThen126];//iscPortalDestination143Arrived}- (void) iscPortalDestination144 {[self iscSetNumber133];[self iscCombineText67];[self iscPortalDeparture140];[self iscSetText54];[self iscCombineText67];[self iscAdd129];[self iscSubtract51];[self iscSubtract52];[self iscSubtract124];[self iscConvertNumberToText56];[self iscCombineText125];[self iscSetText49];//iscPortalDestination144Arrived}- (void) iscConvertTextToNumber145 {iscVstart = [iscVstartText intValue];//iscConvertTextToNumber145Done}- (void) iscConvertTextToNumber146 {iscVn = [iscVnText intValue];//iscConvertTextToNumber146Done}- (void) iscConvertTextToNumber147 {iscVsl = [iscVslText intValue];//iscConvertTextToNumber147Done}- (void) iscGetTextBox148 {iscVwImpar = iscWindow173wImpar0.text;[self iscTargetIs153];//iscGetTextBox148Done}- (void) iscGetTextBox149 {iscVwPar = iscWindow173wPar0.text;[self iscTargetIs154];//iscGetTextBox149Done}- (void) iscPortalDeparture150 {[self iscPortalDestination6];//iscPortalDeparture150Done}- (void) iscSetButton152 {[iscWindow173bStart0 setTitle:iscVtotalPages forState:UIControlStateNormal];//iscSetButton152Done}- (void) iscMessageBox155 {iscMessageBox155var = [[UIAlertView alloc] initWithTitle:@"" message:@"The copy button is not available for this platform." delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];[iscMessageBox155var show];[iscMessageBox155var release];}- (void) iscMessageBox156 {iscMessageBox156var = [[UIAlertView alloc] initWithTitle:@"" message:@"The copy button is not available for this platform yet. You must copy manually at the moment." delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];[iscMessageBox156var show];[iscMessageBox156var release];}- (void) iscTargetIs157 {[self iscClipboard_Copy159];//iscTargetIs157iOS}- (void) iscClipboard_Copy159 {UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];pasteboard.string = iscVwImpar;//iscClipboard_Copy159Done}- (void) iscTargetIs160 {[self iscWindow11];//iscTargetIs160iOS}- (void) iscTargetIs161 {[self iscSubtract19];[self iscAdd18];[self iscDivide17];[self iscIfThen170];//iscTargetIs161iOS}- (void) iscSetNumber162 {iscVwAbout = 1;[self iscWindow178];//iscSetNumber162Done}- (void) iscSetCanvasPicture163 {[iscWindow178icon0  setImage:[UIImage imageNamed:@"about.jpg"] forState:UIControlStateNormal];[iscWindow178icon0  setImage:[UIImage imageNamed:@"about.jpg"] forState:UIControlStateHighlighted];//iscSetCanvasPicture163Done}- (void) iscSetText164 {iscVlink = iscVlink_web;[self iscTargetIs160];//iscSetText164Done}- (void) iscSetText165 {iscVlink = iscVlink_license;[self iscTargetIs160];//iscSetText165Done}- (void) iscCloseWindow166 {//iscCloseWindow166Done}- (void) iscSetNumber167 {iscVwAbout = 0;//iscSetNumber167Done}- (void) iscIfThen169 {if (iscVqDifference > iscVcapAndro){//iscIfThen169True}else{[self iscIfThen31];[self iscSetCanvasPicture8];//iscIfThen169False}//iscIfThen169Done}- (void) iscIfThen170 {if (iscVqDifference > iscVcapApple){//iscIfThen170True}else{[self iscIfThen31];//iscIfThen170False}//iscIfThen170Done}- (void)iscWindow173bStartClicked {[self iscGetTextBox116];//iscWindow173bStartClicked}- (void)iscWindow173CIClicked {[self iscGetTextBox148];//iscWindow173CIClicked}- (void)iscWindow173CPClicked {[self iscGetTextBox149];//iscWindow173CPClicked}- (void)iscWindow173aboutClicked {[self iscIfThen130];//iscWindow173aboutClicked}- (void)iscWindow173paperClicked {[self iscTargetIs50];//iscWindow173paperClicked}- (void)iscWindow173headerClicked {//iscWindow173headerClicked}- (void)iscWindow173 {window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] applicationFrame]];window.backgroundColor = [UIColor whiteColor];iscWindow173nQ0 = [[UILabel alloc] init];iscWindow173nQ0.frame = CGRectMake(10, 138, 300, 22);iscWindow173nQ0.textAlignment = UITextAlignmentCenter;iscWindow173nQ0.text = @"Which would be the last page to print?";[window addSubview:iscWindow173nQ0];iscWindow173slidesQ0 = [[UILabel alloc] init];iscWindow173slidesQ0.frame = CGRectMake(10, 193, 300, 22);iscWindow173slidesQ0.textAlignment = UITextAlignmentCenter;iscWindow173slidesQ0.text = @"How many slides or pages per side?";[window addSubview:iscWindow173slidesQ0];iscWindow173n0 = [[UITextField alloc] init];iscWindow173n0.frame = CGRectMake(40, 161, 80, 24);[iscWindow173n0.layer setBackgroundColor:[[UIColor whiteColor] CGColor]];[iscWindow173n0.layer setBorderColor:[[UIColor grayColor] CGColor]];[iscWindow173n0.layer setBorderWidth: 1.0];[iscWindow173n0.layer setCornerRadius:5.0];[iscWindow173n0.layer setMasksToBounds:YES];iscWindow173n0.keyboardType = UIKeyboardTypeNumberPad;iscWindow173n0.returnKeyType = UIReturnKeyDone;iscWindow173n0.delegate = self;[iscWindow173n0 setText:@"12"];[window addSubview:iscWindow173n0];iscWindow173sl0 = [[UITextField alloc] init];iscWindow173sl0.frame = CGRectMake(40, 216, 80, 24);[iscWindow173sl0.layer setBackgroundColor:[[UIColor whiteColor] CGColor]];[iscWindow173sl0.layer setBorderColor:[[UIColor grayColor] CGColor]];[iscWindow173sl0.layer setBorderWidth: 1.0];[iscWindow173sl0.layer setCornerRadius:5.0];[iscWindow173sl0.layer setMasksToBounds:YES];iscWindow173sl0.keyboardType = UIKeyboardTypeNumberPad;iscWindow173sl0.returnKeyType = UIReturnKeyDone;iscWindow173sl0.delegate = self;[iscWindow173sl0 setText:@"4"];[window addSubview:iscWindow173sl0];iscWindow173bStart0 = [UIButton buttonWithType:UIButtonTypeRoundedRect];iscWindow173bStart0.frame = CGRectMake(140, 220, 158, 36);[iscWindow173bStart0 setTitle:@"Generate Print Sets" forState:UIControlStateNormal];[iscWindow173bStart0 addTarget:self action:@selector(iscWindow173bStartClicked) forControlEvents:UIControlEventTouchUpInside] ;[window addSubview:iscWindow173bStart0];iscWindow173inicioQ0 = [[UILabel alloc] init];iscWindow173inicioQ0.frame = CGRectMake(10, 84, 300, 22);iscWindow173inicioQ0.textAlignment = UITextAlignmentCenter;iscWindow173inicioQ0.text = @"Which would be the first page to print?";[window addSubview:iscWindow173inicioQ0];iscWindow173start0 = [[UITextField alloc] init];iscWindow173start0.frame = CGRectMake(40, 107, 80, 24);[iscWindow173start0.layer setBackgroundColor:[[UIColor whiteColor] CGColor]];[iscWindow173start0.layer setBorderColor:[[UIColor grayColor] CGColor]];[iscWindow173start0.layer setBorderWidth: 2.0];[iscWindow173start0.layer setCornerRadius:5.0];[iscWindow173start0.layer setMasksToBounds:YES];iscWindow173start0.keyboardType = UIKeyboardTypeNumberPad;iscWindow173start0.returnKeyType = UIReturnKeyDone;iscWindow173start0.delegate = self;[iscWindow173start0 setText:@"1"];[window addSubview:iscWindow173start0];UIView* dummyView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 1, 1)];iscWindow173infoImpar0 = [[UILabel alloc] init];iscWindow173infoImpar0.frame = CGRectMake(3, 272, 314, 22);iscWindow173infoImpar0.textAlignment = UITextAlignmentCenter;iscWindow173infoImpar0.text = @"Odd, set of pages to print first.";[window addSubview:iscWindow173infoImpar0];iscWindow173wImpar0 = [[UITextField alloc] init];iscWindow173wImpar0.frame = CGRectMake(56, 299, 245, 26);iscWindow173wImpar0.inputView = dummyView; // Hide keyboard, but show blinking cursor[iscWindow173wImpar0.layer setBackgroundColor:[[UIColor whiteColor] CGColor]];[iscWindow173wImpar0.layer setBorderColor:[[UIColor grayColor] CGColor]];[iscWindow173wImpar0.layer setBorderWidth: 1.0];[iscWindow173wImpar0.layer setCornerRadius:5.0];[iscWindow173wImpar0.layer setMasksToBounds:YES];iscWindow173wImpar0.keyboardType = UIKeyboardTypeDefault;iscWindow173wImpar0.returnKeyType = UIReturnKeyDone;iscWindow173wImpar0.delegate = self;[iscWindow173wImpar0 setText:@""];[window addSubview:iscWindow173wImpar0];iscWindow173parInfo0 = [[UILabel alloc] init];iscWindow173parInfo0.frame = CGRectMake(3, 333, 314, 22);iscWindow173parInfo0.textAlignment = UITextAlignmentCenter;iscWindow173parInfo0.text = @"Even, set of pages to print on the back.";[window addSubview:iscWindow173parInfo0];iscWindow173wPar0 = [[UITextField alloc] init];iscWindow173wPar0.inputView = dummyView; // Hide keyboard, but show blinking cursor;iscWindow173wPar0.frame = CGRectMake(57, 360, 245, 26);[iscWindow173wPar0.layer setBackgroundColor:[[UIColor whiteColor] CGColor]];[iscWindow173wPar0.layer setBorderColor:[[UIColor grayColor] CGColor]];[iscWindow173wPar0.layer setBorderWidth: 1.0];[iscWindow173wPar0.layer setCornerRadius:5.0];[iscWindow173wPar0.layer setMasksToBounds:YES];iscWindow173wPar0.keyboardType = UIKeyboardTypeDefault;iscWindow173wPar0.returnKeyType = UIReturnKeyDone;iscWindow173wPar0.delegate = self;[iscWindow173wPar0 setText:@""];[window addSubview:iscWindow173wPar0];iscWindow173CI0 = [UIButton buttonWithType:UIButtonTypeCustom];iscWindow173CI0.frame = CGRectMake(15, 296, 32, 32);[iscWindow173CI0 setTitle:@"Copiar i" forState:UIControlStateNormal];[iscWindow173CI0 addTarget:self action:@selector(iscWindow173CIClicked) forControlEvents:UIControlEventTouchUpInside];[window addSubview:iscWindow173CI0];iscWindow173CP0 = [UIButton buttonWithType:UIButtonTypeCustom];iscWindow173CP0.frame = CGRectMake(14, 357, 32, 32);[iscWindow173CP0 setTitle:@"Copiar p" forState:UIControlStateNormal];[iscWindow173CP0 addTarget:self action:@selector(iscWindow173CPClicked) forControlEvents:UIControlEventTouchUpInside];[window addSubview:iscWindow173CP0];iscWindow173about0 = [UIButton buttonWithType:UIButtonTypeRoundedRect];iscWindow173about0.frame = CGRectMake(166, 406, 136, 35);[iscWindow173about0 setTitle:@"About dualPrint" forState:UIControlStateNormal];[iscWindow173about0 addTarget:self action:@selector(iscWindow173aboutClicked) forControlEvents:UIControlEventTouchUpInside];[window addSubview:iscWindow173about0];iscWindow173paper0 = [UIButton buttonWithType:UIButtonTypeRoundedRect];iscWindow173paper0.frame = CGRectMake(18, 406, 136, 35);[iscWindow173paper0 setTitle:@"Print assist" forState:UIControlStateNormal];[iscWindow173paper0 addTarget:self action:@selector(iscWindow173paperClicked) forControlEvents:UIControlEventTouchUpInside];[window addSubview:iscWindow173paper0];iscWindow173header0 = [UIButton buttonWithType:UIButtonTypeCustom];iscWindow173header0.frame = CGRectMake(0, 0, 320, 68);[iscWindow173header0 setTitle:@"dualPrint_header" forState:UIControlStateNormal];[iscWindow173header0 addTarget:self action:@selector(iscWindow173headerClicked) forControlEvents:UIControlEventTouchUpInside];[window addSubview:iscWindow173header0];[window makeKeyAndVisible];//iscWindow173Done[self iscSetCanvasPicture10];[self iscSetCanvasPicture9];[self iscSetCanvasPicture8];//iscWindow173Opened}- (void) iscHide_Keyboard2:(BOOL)animated {    [iscWindow173start0 resignFirstResponder];    [iscWindow173n0 resignFirstResponder];    [iscWindow173sl0 resignFirstResponder];    [iscWindow173wImpar0 resignFirstResponder];    [iscWindow173wPar0 resignFirstResponder];    //iscHide_Keyboard2Done}- (void) iscMessageBox174 {iscMessageBox174var = [[UIAlertView alloc] initWithTitle:@"" message:@"Please fill all boxes first." delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];[iscMessageBox174var show];[iscMessageBox174var release];}- (void) iscIfThen175 {if (iscVstartText == iscVnullText){[self iscMessageBox174];//iscIfThen175True}else{[self iscIfThen176];//iscIfThen175False}//iscIfThen175Done}- (void) iscIfThen176 {if (iscVnText == iscVnullText){[self iscMessageBox174];//iscIfThen176True}else{[self iscIfThen177];//iscIfThen176False}//iscIfThen176Done}- (void) iscIfThen177 {if (iscVslText == iscVnullText){[self iscMessageBox174];//iscIfThen177True}else{[self iscConvertTextToNumber145];[self iscConvertTextToNumber146];[self iscConvertTextToNumber147];[self iscIfThen114];//iscIfThen177False}//iscIfThen177Done}- (void)iscWindow178iconClicked {//iscWindow178iconClicked}- (void)iscWindow178closeClicked {[self iscTargetIs131];//iscWindow178closeClicked}- (void)iscWindow178webClicked {[self iscSetText164];//iscWindow178webClicked}- (void)iscWindow178licenseClicked {[self iscSetText165];//iscWindow178licenseClicked}- (void)iscWindow178 {window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] applicationFrame]];window.backgroundColor = [UIColor whiteColor];iscWindow178icon0 = [UIButton buttonWithType:UIButtonTypeCustom];iscWindow178icon0.frame = CGRectMake(115, 30, 90, 90);[iscWindow178icon0 setTitle:@"icon" forState:UIControlStateNormal];[iscWindow178icon0 addTarget:self action:@selector(iscWindow178iconClicked) forControlEvents:UIControlEventTouchUpInside];[window addSubview:iscWindow178icon0];iscWindow178info0 = [[UILabel alloc] init];iscWindow178info0.frame = CGRectMake(10, 184, 300, 20);iscWindow178info0.textAlignment = UITextAlignmentCenter;iscWindow178info0.text = @"dualPrint is an application to";[window addSubview:iscWindow178info0];iscWindow178rights0 = [[UILabel alloc] init];iscWindow178rights0.frame = CGRectMake(10, 263, 300, 20);iscWindow178rights0.textAlignment = UITextAlignmentCenter;iscWindow178rights0.text = @"© 2013, Javier Oscar Cordero Pérez";[window addSubview:iscWindow178rights0];iscWindow178close0 = [UIButton buttonWithType:UIButtonTypeRoundedRect];iscWindow178close0.frame = CGRectMake(229, 387, 80, 38);[iscWindow178close0 setTitle:@"Close" forState:UIControlStateNormal];[iscWindow178close0 addTarget:self action:@selector(iscWindow178closeClicked) forControlEvents:UIControlEventTouchUpInside];[window addSubview:iscWindow178close0];iscWindow178web0 = [UIButton buttonWithType:UIButtonTypeRoundedRect];iscWindow178web0.frame = CGRectMake(11, 387, 89, 38);[iscWindow178web0 setTitle:@"Website" forState:UIControlStateNormal];[iscWindow178web0 addTarget:self action:@selector(iscWindow178webClicked) forControlEvents:UIControlEventTouchUpInside];[window addSubview:iscWindow178web0];iscWindow178MIT0 = [[UILabel alloc] init];iscWindow178MIT0.frame = CGRectMake(10, 323, 300, 20);iscWindow178MIT0.textAlignment = UITextAlignmentCenter;iscWindow178MIT0.text = @"Available under the MIT License.";[window addSubview:iscWindow178MIT0];iscWindow178version0 = [[UILabel alloc] init];iscWindow178version0.frame = CGRectMake(111, 144, 94, 20);iscWindow178version0.textAlignment = UITextAlignmentCenter;iscWindow178version0.text = @"1.3 alpha";[window addSubview:iscWindow178version0];iscWindow178dualprint0 = [[UILabel alloc] init];iscWindow178dualprint0.frame = CGRectMake(115, 123, 90, 20);iscWindow178dualprint0.textAlignment = UITextAlignmentCenter;iscWindow178dualprint0.text = @"dualPrint";[window addSubview:iscWindow178dualprint0];iscWindow178license0 = [UIButton buttonWithType:UIButtonTypeRoundedRect];iscWindow178license0.frame = CGRectMake(104, 387, 90, 38);[iscWindow178license0 setTitle:@"License" forState:UIControlStateNormal];[iscWindow178license0 addTarget:self action:@selector(iscWindow178licenseClicked) forControlEvents:UIControlEventTouchUpInside];[window addSubview:iscWindow178license0];iscWindow178illumination0 = [[UILabel alloc] init];iscWindow178illumination0.frame = CGRectMake(10, 284, 300, 20);iscWindow178illumination0.textAlignment = UITextAlignmentCenter;iscWindow178illumination0.text = @"Built with Free Software.";[window addSubview:iscWindow178illumination0];iscWindow178info10 = [[UILabel alloc] init];iscWindow178info10.frame = CGRectMake(10, 205, 300, 20);iscWindow178info10.textAlignment = UITextAlignmentCenter;iscWindow178info10.text = @"save paper by assisting";[window addSubview:iscWindow178info10];iscWindow178info20 = [[UILabel alloc] init];iscWindow178info20.frame = CGRectMake(10, 226, 300, 20);iscWindow178info20.textAlignment = UITextAlignmentCenter;iscWindow178info20.text = @"multi-sided printing.";[window addSubview:iscWindow178info20];iscWindow178MIT10 = [[UILabel alloc] init];iscWindow178MIT10.frame = CGRectMake(10, 344, 300, 20);iscWindow178MIT10.textAlignment = UITextAlignmentCenter;iscWindow178MIT10.text = @"For more information press License.";[window addSubview:iscWindow178MIT10];[window makeKeyAndVisible];//iscWindow178Done[self iscSetCanvasPicture163];//iscWindow178Opened}- (void) iscTargetIs153 {[self iscClipboard_Copy159];//iscTargetIs153iOS}- (void) iscTargetIs154 {[self iscClipboard_Copy21];//iscTargetIs154iOS}//EndOfFunctions- (BOOL) textFieldShouldReturn:(UITextField*) textField {[textField resignFirstResponder];return YES;}- (void)alertView:(UIAlertView *)theAlert clickedButtonAtIndex:(NSInteger)buttonIndex {if(theAlert == iscMessageBox40var) {//iscMessageBox40Closed}if(theAlert == iscMessageBox48var) {//iscMessageBox48Closed}if(theAlert == iscMessageBox60var) {//iscMessageBox60Closed}if(theAlert == iscMessageBox64var) {//iscMessageBox64Closed}if(theAlert == iscMessageBox96var) {//iscMessageBox96Closed}if(theAlert == iscMessageBox97var) {//iscMessageBox97Closed}if(theAlert == iscMessageBox155var) {//iscMessageBox155Closed}if(theAlert == iscMessageBox156var) {//iscMessageBox156Closed}if(theAlert == iscMessageBox174var) {//iscMessageBox174Closed}//EndOfAlert}- (void)dealloc {//    [numberPadDoneImageNormal release];//    [numberPadDoneImageHighlighted release];//    [numberPadDoneButton release];    [super dealloc];}@end